{"version":3,"sources":["components/DatePicker/index.tsx","components/FormatTable/index.tsx","App.tsx","index.tsx"],"names":["initializeIcons","iconProps","iconName","className","mergeStyles","color","fontSize","lineHeight","position","right","padding","DatePicker","React","useState","time","setTime","date","setDate","error","setError","dateTime","setDateTime","timeStamp","setTimeStamp","useEffect","console","log","length","result","test","dateStr","format","getUnixTime","parse","Date","rn","currTime","placeholder","ariaLabel","strings","defaultDatePickerStrings","highlightCurrentMonth","highlightSelectedMonth","initialPickerDate","onSelectDate","showGoToToday","value","formatDate","MaskedTextField","maskChar","mask","title","onChange","e","errorMessage","DefaultButton","text","onClick","navigator","clipboard","writeText","then","catch","err","el","document","createElement","body","appendChild","select","execCommand","removeChild","copyToClickBoard","columns","key","name","fieldName","minWidth","maxWidth","isResizable","window","innerWidth","listItems","output","description","FormatTable","items","DetailsList","compact","selectionMode","SelectionMode","none","this","layoutMode","DetailsListLayoutMode","fixedColumns","setKey","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf380653.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  DatePicker as DatePickerUI,\n  mergeStyles,\n  defaultDatePickerStrings,\n  initializeIcons,\n  MaskedTextField,\n  DefaultButton,\n} from '@fluentui/react'\nimport { format, parse, getUnixTime } from 'date-fns'\n\ninitializeIcons()\n\nconst iconClass = mergeStyles({\n  color: 'black',\n  fontSize: 16,\n  lineHeight: 18,\n  position: 'absolute',\n  right: 4,\n  padding: '7px 5px 5px',\n})\nconst iconProps = { iconName: 'TimePicker', className: iconClass }\n\nconst copyToClickBoard = (text: string) => {\n  if (!navigator.clipboard) {\n    const el = document.createElement('textarea')\n    el.value = text\n    document.body.appendChild(el)\n    el.select()\n    document.execCommand('copy')\n    document.body.removeChild(el)\n  } else {\n    navigator.clipboard\n      .writeText(text)\n      .then(() => console.log('ok'))\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n}\n\nexport const DatePicker: React.FunctionComponent = () => {\n  const [time, setTime] = React.useState('')\n  const [date, setDate] = React.useState<Date>()\n  const [error, setError] = React.useState('')\n  const [dateTime, setDateTime] = React.useState('')\n  const [timeStamp, setTimeStamp] = React.useState('')\n\n  React.useEffect(() => {\n    console.log(time)\n    if (time.length === 5) {\n      const result = /^([0-9]|0[0-9]|1[0-9]|2[0-3])?(:([0-5]|[0-5][0-9])?)?$/.test(\n        time,\n      )\n\n      result ? setError('') : setError('Wrong time format')\n    } else {\n      setError('')\n    }\n  }, [time])\n  React.useEffect(() => {\n    if (date && time.length && !/_/.test(time)) {\n      const dateStr = format(date, 'dd.MM.yyyy')\n      const dateTime = `${dateStr} ${time}`\n\n      setDateTime(dateTime)\n      setTimeStamp(`${getUnixTime(parse(dateTime, 'dd.MM.yyyy HH:mm', new Date()))}`)\n    }\n  }, [date, time])\n\n  const rn = new Date()\n  const currTime = format(rn, 'HH:mm')\n  return (\n    <div className=\"date_picker\">\n      <b>How to make universal timestamp:</b>\n      <br />\n      <b>1. Pick a date</b>\n      <DatePickerUI\n        placeholder=\"Select a date...\"\n        ariaLabel=\"Select a date\"\n        strings={defaultDatePickerStrings}\n        highlightCurrentMonth\n        highlightSelectedMonth\n        initialPickerDate={new Date()}\n        onSelectDate={(date) => date && setDate(date)}\n        showGoToToday\n        value={date}\n        formatDate={(date) => (date ? format(date, 'MMMM do, yyyy') : '')}\n      />\n      <br />\n      <b>2. Write time in 24h format</b>\n      <MaskedTextField\n        placeholder={currTime}\n        maskChar=\"\"\n        mask=\"99\\:99\"\n        title=\"time\"\n        iconProps={iconProps}\n        onChange={(e, value) => setTime(value ?? '')}\n        errorMessage={error}\n      />\n      <br />\n      {timeStamp && timeStamp !== 'NaN' && !error && (\n        <>\n          <div>\n            <b>date:</b> {dateTime}\n          </div>\n          <br />\n          <div>\n            <b>discord timestamp:</b> {`<t:${timeStamp}:F>`}\n          </div>\n          <br />\n          <DefaultButton\n            text=\"Click to copy\"\n            onClick={() => copyToClickBoard(`<t:${timeStamp}:F>`)}\n          />\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport {\n  DetailsList,\n  DetailsListLayoutMode,\n  IColumn,\n  SelectionMode,\n} from '@fluentui/react/lib/DetailsList'\n\nexport interface IListItem {\n  key: number\n  name: string\n  output: string\n  description: string\n}\n\nconst columns: IColumn[] = [\n  {\n    key: 'column1',\n    name: 'style',\n    fieldName: 'name',\n    minWidth: 30,\n    maxWidth: 30,\n    isResizable: true,\n  },\n  {\n    key: 'column2',\n    name: 'output',\n    fieldName: 'output',\n    minWidth: 100,\n    maxWidth: window.innerWidth <= 768 ? 127 : 150,\n    isResizable: true,\n  },\n  {\n    key: 'column3',\n    name: 'description',\n    fieldName: 'description',\n    minWidth: 100,\n    maxWidth: window.innerWidth <= 768 ? 152 : 200,\n    isResizable: true,\n  },\n]\n\nconst listItems: IListItem[] = [\n  {\n    key: 1,\n    name: 't',\n    output: '15:00',\n    description: 'Short Time',\n  },\n  {\n    key: 2,\n    name: 'T',\n    output: '15:00:30',\n    description: 'Long Time',\n  },\n  {\n    key: 3,\n    name: 'd',\n    output: '21/04/2021',\n    description: 'Short Date',\n  },\n  {\n    key: 4,\n    name: 'D',\n    output: 'April 21 20201',\n    description: 'Long Date',\n  },\n  {\n    key: 4,\n    name: 'f',\n    output: 'April 21 2021, 16:20',\n    description: 'Short Date + Short Time',\n  },\n  {\n    key: 5,\n    name: 'F*',\n    output: 'Tue., April 20 2021 16:20',\n    description: 'Long date with time',\n  },\n  {\n    key: 6,\n    name: 'R',\n    output: '2 minutes ago',\n    description: 'Time relative to current',\n  },\n]\n\nexport class FormatTable extends React.Component {\n  private readonly items = listItems\n  private readonly columns = columns;\n\n  public render(): JSX.Element {\n    return (\n      <>{\n        window.innerWidth <= 768 ? null : (<><DetailsList\n          compact\n          selectionMode={SelectionMode.none}\n          items={this.items}\n          columns={this.columns}\n          layoutMode={DetailsListLayoutMode.fixedColumns}\n          setKey=\"none\"\n        />\n          <span>* default</span></>)\n      }\n\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport { DatePicker } from 'components/DatePicker'\nimport { FormatTable } from 'components/FormatTable'\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <div className=\"madeby\">\n        <b>made by Delirium#0001</b>\n      </div>\n      <DatePicker />\n      {window.innerWidth <= 768 ? null : <div className=\"textDescr\">\n        <b> available timestamp styles: </b>\n      </div>}\n      <FormatTable />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"wrapper\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}